- name: Create and deploy app on EC2
  hosts: localhost
  gather_facts: no
  vars:
    key_name: "your-aws-keypair"
    region: "us-east-1"
    instance_type: "t2.micro"
    image_id: "ami-0abcdef1234567890" 
    security_group: "your-security-group"
    jar_local_path: "/path/to/your/app/build/libs/app.jar"
    jar_remote_path: "/home/ec2-user/app.jar"
    app_port: 8080
  tasks:
    - name: Launch EC2 instance
      amazon.aws.ec2_instance:
        key_name: "{{ key_name }}"
        region: "{{ region }}"
        instance_type: "{{ instance_type }}"
        image_id: "{{ image_id }}"
        wait: yes
        count: 1
        tags:
          Name: "Jenkins-Deployed-EC2"
        security_groups: "{{ security_group }}"
      register: ec2

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ ec2.instances[0].public_ip_address }}"
        port: 22
        delay: 10
        timeout: 300

    - name: Add new instance to inventory
      add_host:
        name: ec2_instance
        ansible_host: "{{ ec2.instances[0].public_ip_address }}"
        ansible_user: ec2-user
        ansible_ssh_private_key_file: "/path/to/your/aws-key.pem"

- name: Deploy and run app on EC2
  hosts: ec2_instance
  become: yes
  tasks:
    - name: Copy jar to EC2
      copy:
        src: "{{ jar_local_path }}"
        dest: "{{ jar_remote_path }}"
        mode: '0755'

    - name: Run jar app
      shell: "nohup java -jar {{ jar_remote_path }} > app.log 2>&1 &"

    - name: Open app port in security group
      amazon.aws.ec2_group:
        name: "{{ security_group }}"
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: "{{ app_port }}"
            to_port: "{{ app_port }}"
            cidr_ip: 0.0.0.0/0
        rules_egress: []
